{"remainingRequest":"C:\\Users\\Awa\\SocialNetwork\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Awa\\SocialNetwork\\frontend\\src\\components\\Posts.vue?vue&type=template&id=67344653&scoped=true&","dependencies":[{"path":"C:\\Users\\Awa\\SocialNetwork\\frontend\\src\\components\\Posts.vue","mtime":1620632222275},{"path":"C:\\Users\\Awa\\SocialNetwork\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Awa\\SocialNetwork\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Awa\\SocialNetwork\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Awa\\SocialNetwork\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}